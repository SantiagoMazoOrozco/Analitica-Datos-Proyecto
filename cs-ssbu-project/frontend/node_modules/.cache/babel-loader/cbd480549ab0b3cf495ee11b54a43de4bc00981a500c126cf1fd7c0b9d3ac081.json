{"ast":null,"code":"const getEventId = async (tournamentName, eventName) => {\n  try {\n    const response = await fetch(`http://localhost:8000/api/get-event-id/?tournament_name=${tournamentName}&event_name=${eventName}`, {\n      method: 'GET'\n    });\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor');\n    }\n    const data = await response.json();\n    return data.event_id; // Supongo que la respuesta es el `event_id` o lo que retorne tu backend\n  } catch (error) {\n    console.error('Error al obtener el ID del evento:', error);\n    throw error;\n  }\n};\nexport default getEventId;","map":{"version":3,"names":["getEventId","tournamentName","eventName","response","fetch","method","ok","Error","data","json","event_id","error","console"],"sources":["C:/Users/linkm/OneDrive/Documentos/Proyectos/Analisis de Datos/Analitica-Datos-Proyecto/cs-ssbu-project/frontend/src/api/api.js"],"sourcesContent":["const getEventId = async (tournamentName, eventName) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:8000/api/get-event-id/?tournament_name=${tournamentName}&event_name=${eventName}`, {\r\n      method: 'GET',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Error en la respuesta del servidor');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.event_id; // Supongo que la respuesta es el `event_id` o lo que retorne tu backend\r\n  } catch (error) {\r\n    console.error('Error al obtener el ID del evento:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getEventId;\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAAA,CAAOC,cAAc,EAAEC,SAAS,KAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2DAA2DH,cAAc,eAAeC,SAAS,EAAE,EAAE;MAChIG,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACvD;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,QAAQ,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAeX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}